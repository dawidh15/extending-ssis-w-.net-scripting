<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/27/2021 2:49:59 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="PEQUE06"
  DTS:CreatorName="PEQUE06\Asus VivoBook"
  DTS:DTSID="{CD43CEE0-34E9-4A6B-B803-2E6F70909773}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.132"
  DTS:LocaleID="5130"
  DTS:ObjectName="E02-Zip-Unzip"
  DTS:PackageType="5"
  DTS:VersionBuild="11"
  DTS:VersionGUID="{D0FCAA5A-6459-44A9-AA82-A000D5CA7280}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[File Original]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{AF335E4A-6BA2-4809-ADEB-62571D701290}"
      DTS:ObjectName="File Original">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="5130"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\localRepos\ssis_dotnet\Ch08\products.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ProductId"
              DTS:DTSID="{653ED58D-B99D-4211-9A7C-4C7D3F2C83DA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ProductName"
              DTS:DTSID="{0A34A746-C6B1-4BDC-9522-B62B441D6930}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Color"
              DTS:DTSID="{13358D5F-F106-4912-A1E9-F38463253564}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AFFE85BF-D7B6-4376-9D4F-9C305A90C337}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CompressedAddress">
      <DTS:VariableValue
        DTS:DataType="8">C:\localRepos\ssis_dotnet\Ch08\Compressed</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4892FEE5-EF56-43AC-BD1F-821CE5CB9254}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OriginalAddress">
      <DTS:VariableValue
        DTS:DataType="8">C:\localRepos\ssis_dotnet\Ch08\Original</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C0E1E9EA-789A-4033-8A74-49FAD6374343}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="UncompressedAddress">
      <DTS:VariableValue
        DTS:DataType="8">C:\localRepos\ssis_dotnet\Ch08\Uncompressed</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\SCR-Zip-Unzip"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{8068F13B-3B8F-4CA6-99A9-3097F1358F3F}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SCR-Zip-Unzip"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_6288655231b4426293080d0c108f193e"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::CompressedAddress,User::OriginalAddress,User::UncompressedAddress">
          <ProjectItem
            Name="ST_6288655231b4426293080d0c108f193e.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5799054B-0D26-441D-8FE6-7A350315D52E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_6288655231b4426293080d0c108f193e</RootNamespace>
    <AssemblyName>ST_6288655231b4426293080d0c108f193e</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.IO.Compression.FileSystem" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6288655231b4426293080d0c108f193e.Properties.Settings.get_Default():ST_6288655231b4426293080d0c108f193e.Properties.Sett" +
    "ings")]

namespace ST_6288655231b4426293080d0c108f193e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Collections;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.IO.Compression;
#endregion

namespace ST_6288655231b4426293080d0c108f193e
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            bool fireAgain = true;
            // Obtener direccion de archivo
            string sourceFile = Dts.Connections["File Original"].ConnectionString;

            // Crear gestor de directorio para archivos fuente
            string originalPath = Dts.Variables["User::OriginalAddress"].Value.ToString();
            ManageDirectory originalDirectory = new ManageDirectory(originalPath);

            // Crear gestor de directorio para comprimidos
            string compressPath = Dts.Variables["User::CompressedAddress"].Value.ToString();
            ManageDirectory compressDirectory = new ManageDirectory(compressPath);

            // Crear gestor de directorio para descomprimidos
            string uncompressPath = Dts.Variables["User::UncompressedAddress"].Value.ToString();
            ManageDirectory uncompressDirectory = new ManageDirectory(uncompressPath);


            Dts.Events.FireInformation(0
               , "INFO"
               , $"Source Dir: {originalDirectory.Path}. Destination Dir: {compressDirectory.Path}"
               , string.Empty
               , 0
               , ref fireAgain);

            try
            {
                // Remove Dirs
                originalDirectory.Remove(); 
                compressDirectory.Remove();
                uncompressDirectory.Remove();

                // Crear Directorio para guardar original, otro para el Zip y para unzip
                originalDirectory.Create();          
                compressDirectory.Create();
                uncompressDirectory.Create();

                // Copiar el archivo original al dir de respaldo
                string backupFile = Path.Combine(
                    originalDirectory.Path
                    , Path.GetFileName(sourceFile));

                File.Copy(sourceFile, backupFile, true);


            } 
            catch(Exception ex)
            {
                Dts.Events.FireError(0
                    , "ERROR"
                    , $"Can't create directory: {ex.Message}"
                    , string.Empty
                    , 0);
            }



            // Comprimir Archivo

            //To use the ZipFile class, you must reference the System.IO.Compression.FileSystem assembly in your project.
            string zipFileDestination = Path.Combine(compressDirectory.Path, "backup.zip");
            ZipFile.CreateFromDirectory(originalDirectory.Path, zipFileDestination);

            // Descomprimir
            ZipFile.ExtractToDirectory(zipFileDestination, uncompressDirectory.Path);

            // Verificar que archivo se comprimio, y descomprimió
            var zipFiles = Directory.GetFiles(compressDirectory.Path, "*.zip");
            var unzipFiles = Directory.GetFiles(uncompressDirectory.Path, "*.csv");

            if ((zipFiles.Length != 0) && (unzipFiles.Length != 0) )
            {
                Dts.TaskResult = (int)ScriptResults.Success;
            } else
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
            }

			
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}

    public class ManageDirectory
    {
        public string Path { get; set; }

        public ManageDirectory(string inPath)
        {
            Path = inPath;

        }

        private bool Exists()
        {
           bool value = Directory.Exists(Path);
           return value;
        }

        // Create
        public void Create ()
        {
            if (!Exists())
            {
                Directory.CreateDirectory(Path);
            }
            else
            {
                throw new Exception("Directory already exists");
            }
        }
        // Remove
        public void Remove()
        {
            if (Exists())
            {
                Directory.Delete(Path, true); //recursive delete
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_6288655231b4426293080d0c108f193e</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_6288655231b4426293080d0c108f193e</msb:DisplayName>
    <msb:ProjectId>{87D64ADF-93B7-4BE4-A2F2-A68664DBFD1B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_6288655231b4426293080d0c108f193e.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_6288655231b4426293080d0c108f193e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_6288655231b4426293080d0c108f193e")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6288655231b4426293080d0c108f193e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6288655231b4426293080d0c108f193e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6288655231b4426293080d0c108f193e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_6288655231b4426293080d0c108f193e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_6288655231b4426293080d0c108f193e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_6288655231b4426293080d0c108f193e.dll">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
5gBQIAAAAACGAGkEBgABABwiAAAAAIYYOAUGAAEAJCIAAAAAhgh3AzwAAQAsIgAAAACGCIADEAAB
ADUiAAAAAIYYOAUQAAIARCIAAAAAgQBjBuoAAwBRIgAAAACGAGwBBgADAHIiAAAAAIYAOAMGAAMA
iCIAAAAAgxg4BQYAAwCQIgAAAACTCPQE7gADALwiAAAAAJMIEAHzAAMAwyIAAAAAkwgcAfgAAwDL
IgAAAACWCHgG/gAEANIiAAAAAIYYOAUGAAQA2iIAAAAAkRg+BQMBBAAAAAEAMgMAAAEAiQMAAAEA
MgMJADgFAQARADgFBgAZADgFCgApADgFEAAxADgFEAA5ADgFEABBADgFEABJADgFEABRADgFEABZ
ADgFEABhADgFEABpADgFBgCRADgFBgCZADgFBgC5ADgFFQBxAEIGLADJACoGMQDRACgENgDZAFkD
PADJAAoGQADhACgERQDpACgDSwCJAG4DPADJAFgGTwD5AGoGVAD5AOwGXADxAIQEXwABAc8AagAB
AfsAbwAJAaAGdQB5AI4APAD5AGoGbwDxAC4FfAARAcUGhQARAdkGhQAZARgGiwDJAIQGAQBxADgF
BgCJADgFBgAZAWMGkgAZAbUGlwB5ADgFEAAZAYgBngApAbUApAApAZMGrQChADgFswDBADgFBgAI
ABgAzQAIABwA0gAhAGsA0gAuAAsAGgEuABMAIwEuABsAQgEuACMASwEuACsAdAEuADMAdAEuADsA
dAEuAEMASwEuAEsAegEuAFMAdAEuAFsAkQFDAGMA0gBJAHsAQgFgAGsA0gBpAHsAQgGAAGsA0gCB
AGsA0gCDAHMA0gAbAAMAAQAEAAIABQAEAAAAiwMHAQAA+AQLAQAAMAEQAQAAfAYVAQIAAwADAAEA
BAADAAIACgAFAAIACwAHAAEADAAHAAIADQAJAASAAAABAAAAMB4YeAAAAAAAAFoAAAAEAAAAAAAA
AAAAAAC7ADsAAAAAAA8AAAAAAAAAAAAAAMQAkAMAAAAABAAAAAAAAAAAAAAAuwBLBAAAAAAPAAAA
AAAAAAAAAADEABQAAAAAAAQAAAAAAAAAAAAAALsAMQQAAAAAAAAAAAEAAACJBQAABgACAAAAADxN
b2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBt
c2NvcmxpYgA8UGF0aD5rX19CYWNraW5nRmllbGQAU1RfNjI4ODY1NTIzMWI0NDI2MjkzMDgwZDBj
MTA4ZjE5M2UAZGVmYXVsdEluc3RhbmNlAGdldF9NZXNzYWdlAFZhcmlhYmxlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAFppcEZpbGUAR2V0RmlsZU5hbWUATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUnVudGltZQBDb21iaW5lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAENyZWF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBEZWxldGUAQ29t
cGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1
Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJp
YnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJp
YnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRB
dHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0
cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBSZW1vdmUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBn
ZXRfQ29ubmVjdGlvblN0cmluZwBUb1N0cmluZwBnZXRfUGF0aABzZXRfUGF0aABpblBhdGgATWlj
cm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tz
LlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzYy
ODg2NTUyMzFiNDQyNjI5MzA4MGQwYzEwOGYxOTNlLmRsbABnZXRfSXRlbQBTeXN0ZW0uSU8uQ29t
cHJlc3Npb24uRmlsZVN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLklP
LkNvbXByZXNzaW9uAEZpcmVJbmZvcm1hdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0u
R2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AQ3VsdHVyZUluZm8ARGly
ZWN0b3J5SW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAENvbm5lY3Rpb25NYW5hZ2VyAEV2ZW50c09i
amVjdFdyYXBwZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lz
dGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzYyODg2NTUy
MzFiNDQyNjI5MzA4MGQwYzEwOGYxOTNlLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBE
ZWJ1Z2dpbmdNb2RlcwBTVF82Mjg4NjU1MjMxYjQ0MjYyOTMwODBkMGMxMDhmMTkzZS5Qcm9wZXJ0
aWVzAGdldF9WYXJpYWJsZXMAR2V0RmlsZXMAU2V0dGluZ3MAZ2V0X0Nvbm5lY3Rpb25zAFN1Y2Nl
c3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9FdmVudHMARXhpc3RzAENvbmNhdABPYmplY3QA
Z2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0Fzc2VtYmx5AENvcHkATWFuYWdlRGlyZWN0
b3J5AENyZWF0ZURpcmVjdG9yeQBDcmVhdGVGcm9tRGlyZWN0b3J5AEV4dHJhY3RUb0RpcmVjdG9y
eQBFbXB0eQAAAAAbRgBpAGwAZQAgAE8AcgBpAGcAaQBuAGEAbAAAK1UAcwBlAHIAOgA6AE8AcgBp
AGcAaQBuAGEAbABBAGQAZAByAGUAcwBzAAAvVQBzAGUAcgA6ADoAQwBvAG0AcAByAGUAcwBzAGUA
ZABBAGQAZAByAGUAcwBzAAAzVQBzAGUAcgA6ADoAVQBuAGMAbwBtAHAAcgBlAHMAcwBlAGQAQQBk
AGQAcgBlAHMAcwAACUkATgBGAE8AABlTAG8AdQByAGMAZQAgAEQAaQByADoAIAAAJy4AIABEAGUA
cwB0AGkAbgBhAHQAaQBvAG4AIABEAGkAcgA6ACAAAAtFAFIAUgBPAFIAADFDAGEAbgAnAHQAIABj
AHIAZQBhAHQAZQAgAGQAaQByAGUAYwB0AG8AcgB5ADoAIAABFWIAYQBjAGsAdQBwAC4AegBpAHAA
AAsqAC4AegBpAHAAAAsqAC4AYwBzAHYAADFEAGkAcgBlAGMAdABvAHIAeQAgAGEAbAByAGUAYQBk
AHkAIABlAHgAaQBzAHQAcwAAcVMAVABfADYAMgA4ADgANgA1ADUAMgAzADEAYgA0ADQAMgA2ADIA
OQAzADAAOAAwAGQAMABjADEAMAA4AGYAMQA5ADMAZQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBS
AGUAcwBvAHUAcgBjAGUAcwAAAAAA2BCx3W/FwkyQ6HONbeI8mAAEIAEBCAMgAAEFIAEBEREEIAEB
DgUgAQERWRAHCQIOEgwSDBIMDh0ODhI9BCAAEmUEIAASaQUgARJtHAMgAA4EIAAScQUgARJ1HAMg
ABwEIAASeQcABA4ODg4OAgYOCiAGAQgODg4IEAIEAAEODgUAAg4ODgYAAwEODgIIIAUCCA4ODggF
AAIBDg4GAAIdDg4OBAABAg4GAAESgJEOBQACAQ4CCAABEoCVEYCZBSAAEoCdByACAQ4SgJ0It3pc
Vhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSUQMGElUDBhIUAgYIAwYRGAMgAAIEAAASUQQAABJV
BQABARJVBAAAEhQDAAABAygADgQIABJRBAgAElUECAASFAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5v
bkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfNjI4ODY1NTIzMWI0NDI2MjkzMDgwZDBj
MTA4ZjE5M2UAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmss
VmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcA
tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nvcmxp
YiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1
YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAA
AABQQURQQURQtAAAAEA0AAAAAAAAAAAAAFo0AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMNAAA
AAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAYeDAeAAABABh4MB4/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADYAMgA4ADgANgA1ADUAMgAzADEAYgA0ADQAMgA2ADIAOQAzADAAOAAwAGQAMABjADEA
MAA4AGYAMQA5ADMAZQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3
ADcAMgA4AC4AMwAwADcANAA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADYAMgA4ADgANgA1ADUAMgAzADEAYgA0ADQAMgA2ADIAOQAzADAAOAAwAGQAMABjADEAMAA4
AGYAMQA5ADMAZQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8ANgAyADgAOAA2ADUANQAyADMAMQBiADQANAAyADYAMgA5ADMAMAA4ADAAZAAw
AGMAMQAwADgAZgAxADkAMwBlAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADYAMgA4ADgANgA1ADUAMgAzADEAYgA0ADQAMgA2ADIAOQAzADAAOAAwAGQAMABj
ADEAMAA4AGYAMQA5ADMAZQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANwA3ADIAOAAuADMAMAA3ADQANAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANwA3ADIAOAAuADMAMAA3ADQANAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABsNAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="153,42"
          Id="Package\SCR-Zip-Unzip"
          TopLeft="84.5,53.5" />
        <AnnotationLayout
          Text="Este ejemplo utiliza la herramienta original de &#xD;&#xA;.NET para comprimir y descomprimir, a diferencia del libro&#xD;&#xA;que usa una librería externa."
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="362,76"
          Id="c9369487-a42a-46a5-93ec-421d63149a59"
          TopLeft="259,49" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>