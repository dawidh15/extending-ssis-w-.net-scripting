<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/18/2021 11:35:31 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="PEQUE06"
  DTS:CreatorName="PEQUE06\Asus VivoBook"
  DTS:DTSID="{FBE65485-97FB-4317-B220-C7CB2029A5E3}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.132"
  DTS:LocaleID="5130"
  DTS:ObjectName="E02-Source"
  DTS:PackageType="5"
  DTS:VersionBuild="2"
  DTS:VersionGUID="{6D1635BC-5F41-4846-91E2-6719B2A7E5EE}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[myFile]"
      DTS:CreationName="FILE"
      DTS:DTSID="{3C15F7D4-EEFA-4493-BBEA-FF9EC4244804}"
      DTS:ObjectName="myFile">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="C:\localRepos\ssis_dotnet\Ch10\Ch10\myFile.txt" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{EA0D611F-75A8-4F9F-94BB-8E492F8E7E84}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task\SCR - Pivot Rows"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="SCR - Pivot Rows"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 
    private string filePath;
    private bool fireAgain = true;

    public override void PreExecute()
    {
        base.PreExecute();
        // Check if file has data else fire warning
        filePath = this.Connections.Connection.AcquireConnection(null).ToString();
        FileInfo fi = new FileInfo(filePath);
        if (fi.Length == 0)
        {
            this.ComponentMetaData.FireWarning(0, "myFile", $"Empty file: {Path.GetFileName(filePath)}",string.Empty, 0);
        } 
        else
        {
            this.ComponentMetaData.FireInformation(0, "MyFile",
                $"Data found in: {Path.GetFileName(filePath)}", string.Empty, 0, ref fireAgain);
        }


    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        int id = 0;
        string Name = string.Empty;
        string Address = string.Empty;
        int numberOfColumns = 3;
        int rowCounter = 0;

        // Stream file
        using(StreamReader sr = new StreamReader(filePath, System.Text.Encoding.UTF8))
        {
            string line;

            while( (line = sr.ReadLine()) != null)
            {
                rowCounter++;
                string[] columns = line.Split(',');
                
                // get data using positional method
                switch (rowCounter)
                {
                    case 1:
                        id = System.Convert.ToInt32(columns[1]);
                        break;
                    case 2:
                        Name = columns[1];
                        break;
                    case 3:
                        Address = columns[1];
                        break;
                    default:
                        break;

                }

                // Reset row counter or end 
                if(rowCounter.Equals(numberOfColumns))
                {
                    // Add new row to output
                    Output0Buffer.AddRow();
                    // save to output buffer
                    Output0Buffer.id = id;
                    Output0Buffer.name = Name;
                    Output0Buffer.address = Address;
                    // last row of data, reset counter
                    rowCounter = 0;
                }
            }
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 id
    {
        set
        {
            this[0] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String name
    {
        set
        {
            this[1] = value;
        }
    }
    public bool name_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String address
    {
        set
        {
            this[2] = value;
        }
    }
    public bool address_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_361f4018b1b24177bcb87e29490f62ba.Properties.Settings.get_Default():SC_361f4018b1b24177bcb87e29490f62ba.Properties.Sett" +
    "ings")]

namespace SC_361f4018b1b24177bcb87e29490f62ba.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_361f4018b1b24177bcb87e29490f62ba.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8d767b76-7b83-4172-870e-60544e80e5eb}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_361f4018b1b24177bcb87e29490f62ba</RootNamespace>
    <AssemblyName>SC_361f4018b1b24177bcb87e29490f62ba</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_361f4018b1b24177bcb87e29490f62ba" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_361f4018b1b24177bcb87e29490f62ba</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_361f4018b1b24177bcb87e29490f62ba</msb:DisplayName>
    <msb:ProjectId>{0EF51011-28F8-4677-8B60-FD5D6D21B116}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_361f4018b1b24177bcb87e29490f62ba.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_361f4018b1b24177bcb87e29490f62ba")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_361f4018b1b24177bcb87e29490f62ba")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_361f4018b1b24177bcb87e29490f62ba.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_361f4018b1b24177bcb87e29490f62ba.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_361f4018b1b24177bcb87e29490f62ba.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_361f4018b1b24177bcb87e29490f62ba.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_361f4018b1b24177bcb87e29490f62ba.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_361f4018b1b24177bcb87e29490f62ba.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
1wM7AOkAqAREAJEAogMGAAEBdwBcAHEAhQZiAPkA/wdqABEBbwBxABkBmQd2ACEBbQEgACkB3AEG
AHkAhQZ7AHkAdwSFAHkAbwQBADEBhQYQAHkAnQgGAHkA8AcGAHkA8weLAJEAhQYGAJEAiQCTAJEA
fweaAJkAhQYGAOkA9ASgADkBSQGmAEEBHgatAEkBKwGyAEkBpAi7ALEAhQbBANEAhQYGAC4ACwBK
AS4AEwBTAS4AGwByAS4AIwB7AS4AKwCkAS4AMwCkAS4AOwCkAS4AQwB7AS4ASwCqAS4AUwCkAS4A
WwDBAUMAYwALAuMAawALAgkBcwByASkBcwByAUEBewALAk8AjwADAAEABQAHAAcACAAIAAoAAAD6
ACoBAABCBC4BAABoATIBAABQBC4BAAC4BzIBAABgBC4BAAAqBTYBAAAOBjsBAAC8AUABAAAJCEUB
AQAGAAMAAQAHAAUAAQAIAAcAAQAJAAkAAQAKAAsAAQALAA0AAgAVAA8AAgAYABEAAgAZABMAAQAa
ABMAAgAbABUABIAAAAEAAAAAAAAAAAAAAAAAnwAAAAQAAAAAAAAAAAAAAMkA2QAAAAAADwAAAAAA
AAAAAAAA0gA/CAAAAAAPAAAAAAAAAAAAAADSAGQIAAAAAA8AAAAAAAAAAAAAANIAfAUAAAAABAAA
AAAAAAAAAAAAyQCABAAAAAAPAAAAAAAAAAAAAADSAJ8FAAAAAAAAAAABAAAA4AYAAAAAAElEVFND
b21wb25lbnRNZXRhRGF0YTEwMABJRFRTUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAElE
VFNSdW50aW1lQ29ubmVjdGlvbjEwMABJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAAVG9JbnQzMgBn
ZXRfVVRGOAA8TW9kdWxlPgBHZXRPdXRwdXRJRABTeXN0ZW0uSU8AU0NfMzYxZjQwMThiMWIyNDE3
N2JjYjg3ZTI5NDkwZjYyYmEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAE1hcmtPdXRw
dXRzRmluaXNoZWQAc2V0X2lkAGRlZmF1bHRJbnN0YW5jZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlw
ZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBHZXRGaWxlTmFtZQBHZXRSdW50aW1lQ29ubmVjdGlv
bkJ5TmFtZQBzZXRfbmFtZQBSZWFkTGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGlu
ZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUARW5jb2RpbmcAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBGaXJlV2FybmluZwBUb1N0cmluZwBmaWxlUGF0aABnZXRfTGVuZ3RoAFN5c3RlbS5D
b21wb25lbnRNb2RlbABTQ18zNjFmNDAxOGIxYjI0MTc3YmNiODdlMjk0OTBmNjJiYS5kbGwAc2V0
X2lkX0lzTnVsbABzZXRfbmFtZV9Jc051bGwAc2V0X2FkZHJlc3NfSXNOdWxsAFNldE51bGwAc2V0
X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AZmlyZUFnYWluAEZpcmVJbmZvcm1h
dGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVm
bGVjdGlvbgBnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uAGdldF9Db25uZWN0aW9uAEFj
cXVpcmVDb25uZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24ARmlsZUluZm8AQ3VsdHVy
ZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50
aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABDaGFyAFN0cmVhbVJl
YWRlcgBUZXh0UmVhZGVyAE91dHB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVy
AGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGlu
ZS5XcmFwcGVyAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ18zNjFmNDAxOGIx
YjI0MTc3YmNiODdlMjk0OTBmNjJiYS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVi
dWdnaW5nTW9kZXMAU0NfMzYxZjQwMThiMWIyNDE3N2JjYjg3ZTI5NDkwZjYyYmEuUHJvcGVydGll
cwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdz
AEVxdWFscwBDb25uZWN0aW9ucwBCdWZmZXJzAHNldF9hZGRyZXNzAEZpbmlzaE91dHB1dHMAQ3Jl
YXRlTmV3T3V0cHV0Um93cwBDb25jYXQAT2JqZWN0AFNldEVuZE9mUm93c2V0AFNwbGl0AGdldF9E
ZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNy
b3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AENvbnZlcnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBl
bGluZUhvc3QAUHJpbWVPdXRwdXQAU3lzdGVtLlRleHQAQWRkUm93AGdldF9Bc3NlbWJseQBFbXB0
eQAAAA1tAHkARgBpAGwAZQAAGUUAbQBwAHQAeQAgAGYAaQBsAGUAOgAgAAANTQB5AEYAaQBsAGUA
AB9EAGEAdABhACAAZgBvAHUAbgBkACAAaQBuADoAIAAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAA
ZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAg
AEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4A
IABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAAABVDAG8AbgBuAGUAYwB0AGkAbwBu
AABxUwBDAF8AMwA2ADEAZgA0ADAAMQA4AGIAMQBiADIANAAxADcANwBiAGMAYgA4ADcAZQAyADkA
NAA5ADAAZgA2ADIAYgBhAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBz
AAAAANHBFcEWn6dNn0WDVZzlIFcABCABAQgDIAABBSABARERBCABAQ4FIAEBEWEEIAEcHAMgAA4D
IAAKBCAAEnUEAAEODgUAAg4ODgIGDgggBQEIDg4OCAogBgEIDg4OCBACDAcICA4OCAgSOQ4dDgUA
ABKAgQcgAgEOEoCBBiABHQ4dAwQAAQgOBCABAggJIAMBEkEdCBJFBSACAQgcAyAAAgMHAQgGAAII
EkUOBSABHQgIBSAAEoCdBiABEoChDgQgABJRCAABEoClEYCpBSAAEoCtByACAQ4SgK0It3pcVhk0
4IkIiYRdzYCAzJECBgIDBhIUAwYSGAMGEgwDBhJJAwYSWQMGEl0DBhIgBCABAQILIAQBCB0IHRJB
EkUFIAEBEkkEAAASWQQAABJdBQABARJdBAAAEiADAAABAygACAMoAAIDKAAOBCgAElEECAASWQQI
ABJdBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAA
KAEAI1NDXzM2MWY0MDE4YjFiMjQxNzdiY2I4N2UyOTQ5MGY2MmJhAAAFAQAAAAAWAQARQ29weXJp
Z2h0IEAgIDIwMjEAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3Jr
RGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3Rl
bS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVz
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAALDgAAAAAAAAA
AAAARjgAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAADg4AAAAAAAAAAAAAAAAX0NvckRsbE1haW4A
bXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AEMAXwAzADYAMQBmADQAMAAxADgAYgAxAGIAMgA0ADEANwA3AGIAYwBiADgANwBlADIAOQA0ADkA
MABmADYAMgBiAGEAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADMANgAxAGYANAAwADEA
OABiADEAYgAyADQAMQA3ADcAYgBjAGIAOAA3AGUAMgA5ADQAOQAwAGYANgAyAGIAYQAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMwA2ADEA
ZgA0ADAAMQA4AGIAMQBiADIANAAxADcANwBiAGMAYgA4ADcAZQAyADkANAA5ADAAZgA2ADIAYgBh
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADMANgAxAGYA
NAAwADEAOABiADEAYgAyADQAMQA3ADcAYgBjAGIAOAA3AGUAMgA5ADQAOQAwAGYANgAyAGIAYQAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAWDgAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_361f4018b1b24177bcb87e29490f62ba</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">F3</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\SCR - Pivot Rows.Connections[Connection]"
                  connectionManagerID="Package.ConnectionManagers[myFile]"
                  connectionManagerRefId="Package.ConnectionManagers[myFile]"
                  name="Connection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task\SCR - Pivot Rows.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\SCR - Pivot Rows.Outputs[Output 0].Columns[id]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\SCR - Pivot Rows.Outputs[Output 0].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\SCR - Pivot Rows.Outputs[Output 0].Columns[name]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\SCR - Pivot Rows.Outputs[Output 0].Columns[name]"
                      name="name" />
                    <outputColumn
                      refId="Package\Data Flow Task\SCR - Pivot Rows.Outputs[Output 0].Columns[address]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Data Flow Task\SCR - Pivot Rows.Outputs[Output 0].Columns[address]"
                      name="address" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Union All"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union All"
              version="1">
              <inputs>
                <input
                  refId="Package\Data Flow Task\Union All.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 1].Columns[id]"
                      cachedDataType="i4"
                      cachedName="id"
                      lineageId="Package\Data Flow Task\SCR - Pivot Rows.Outputs[Output 0].Columns[id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 1].Columns[name]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="name"
                      lineageId="Package\Data Flow Task\SCR - Pivot Rows.Outputs[Output 0].Columns[name]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[name]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Union All.Inputs[Union All Input 1].Columns[address]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="address"
                      lineageId="Package\Data Flow Task\SCR - Pivot Rows.Outputs[Output 0].Columns[address]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[address]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Flow Task\Union All.Inputs[Union All Input 2]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Union All.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[id]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[name]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[name]"
                      name="name" />
                    <outputColumn
                      refId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[address]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\Data Flow Task\Union All.Outputs[Union All Output 1].Columns[address]"
                      name="address" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task.Paths[Output 0]"
              endId="Package\Data Flow Task\Union All.Inputs[Union All Input 1]"
              name="Output 0"
              startId="Package\Data Flow Task\SCR - Pivot Rows.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="155,42"
          Id="Package\Data Flow Task"
          TopLeft="48,64" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="167,42"
          Id="Package\Data Flow Task\SCR - Pivot Rows"
          TopLeft="99,91" />
        <NodeLayout
          Size="123,42"
          Id="Package\Data Flow Task\Union All"
          TopLeft="118,204" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 0]"
          TopLeft="181,133">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,71"
              Start="0,0"
              End="0,63.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,63.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,23.75,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>